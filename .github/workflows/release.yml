name: release
on:
  push:
    tags: ["v*"]

permissions:
  contents: write   # <-- needed for softprops/action-gh-release to create/upload

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - os: macos-13
            target: x86_64-apple-darwin
          - os: macos-14
            target: aarch64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
        
      # --- only for musl target ---
      - name: Install musl toolchain
        if: contains(matrix.target, 'musl')
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools
      - name: Configure musl env
        if: contains(matrix.target, 'musl')
        run: |
          echo "CC_x86_64_unknown_linux_musl=musl-gcc" >> $GITHUB_ENV
          echo "CARGO_TARGET_X86_64_UNKNOWN_LINUX_MUSL_LINKER=musl-gcc" >> $GITHUB_ENV

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package
        shell: bash
        run: |
          set -euo pipefail
          NAME="starthub"
          VER="${GITHUB_REF_NAME#v}"
          TARGET="${{ matrix.target }}"
          BIN="target/${TARGET}/release/${NAME}"
          if [[ "${{ runner.os }}" == "Windows" ]]; then BIN="${BIN}.exe"; fi
          mkdir -p dist
          tar -C "$(dirname "$BIN")" -czf "dist/${NAME}-v${VER}-${TARGET}.tar.gz" "$(basename "$BIN")"

      - name: Upload assets
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-npm:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org
      - name: Publish
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
